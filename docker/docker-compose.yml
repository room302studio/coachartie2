version: '3.8'

services:
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - coachartie

  capabilities:
    build:
      context: ..
      dockerfile: docker/Dockerfile.capabilities
    environment:
      - REDIS_HOST=redis
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SERVICE_NAME=capabilities
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - coachartie

  discord:
    build:
      context: ..
      dockerfile: docker/Dockerfile.discord
    environment:
      - REDIS_HOST=redis
      - DATABASE_URL=${DATABASE_URL}
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - SERVICE_NAME=discord
    depends_on:
      - redis
      - capabilities
    restart: unless-stopped
    networks:
      - coachartie

  sms:
    build:
      context: ..
      dockerfile: docker/Dockerfile.sms
    ports:
      - "9993:9993"
    environment:
      - REDIS_HOST=redis
      - DATABASE_URL=${DATABASE_URL}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
      - SERVICE_NAME=sms
    depends_on:
      - redis
      - capabilities
    restart: unless-stopped
    networks:
      - coachartie

  email:
    build:
      context: ..
      dockerfile: docker/Dockerfile.email
    ports:
      - "9994:9994"
    environment:
      - REDIS_HOST=redis
      - DATABASE_URL=${DATABASE_URL}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - SERVICE_NAME=email
    depends_on:
      - redis
      - capabilities
    restart: unless-stopped
    networks:
      - coachartie

  # Optional: Redis Commander for queue monitoring
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - coachartie
    profiles:
      - monitoring

volumes:
  redis-data:

networks:
  coachartie:
    driver: bridge